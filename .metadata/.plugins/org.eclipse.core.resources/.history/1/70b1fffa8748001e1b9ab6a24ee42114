package com.smhrd.frontcontroller;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;
import com.smhrd.controller.LoginService;
import com.smhrd.model.BoardDAO;
import com.smhrd.model.BoardVO;
import com.smhrd.model.MemberDAO;
import com.smhrd.model.MemberDTO;

public class FrontController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void service(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// url mapping -> *.do
		// * = 전체
		// .do 확장자가 붙으면 전부 FrontController로 모임
		System.out.println("[FrontController]");

		// 어디서 요청이 들어왔는지 확인
		String uri = request.getRequestURI();
		System.out.println("들어온 요청 : " + uri);

		// 프로젝트 이름 확인
		String project = request.getContextPath();
		System.out.println("프로젝트 : " + project);

		// 문자열 잘라내기 -> uri
		// substring(start) -> start부터 끝까지 잘라주는 메소드
		// substring(start, end) -> start부터 end전까지 잘라주는 메소드
		uri = uri.substring(project.length() + 1);
		System.out.println("자르기 : " + uri);

		request.setCharacterEncoding("UTF-8");
		HttpSession session = request.getSession();

		if (uri.equals("LoginService.do")) {
			LoginService service = new LoginService();
			String moveURL = service.execute(request, response);
			response.sendRedirect(moveURL);
			
		} else if (uri.equals("JoinService.do")) {
			String email = request.getParameter("email");
			String pw = request.getParameter("pw");
			String tel = request.getParameter("tel");
			String address = request.getParameter("address");

			System.out.println(email + pw + tel + address);
			MemberDTO dto = new MemberDTO(email, pw, tel, address);
			int cnt = new MemberDAO().join(dto);
			if (cnt > 0) {
				System.out.println("회원가입 성공!");
				RequestDispatcher rd = request.getRequestDispatcher("JoinSuccess.jsp");
				request.setAttribute("joinEmail", email);
				rd.forward(request, response);
			} else {
				System.out.println("회원가입 실패...");
				response.sendRedirect("Main.jsp");
			}
		} else if (uri.equals("logout.do")) {
			session.invalidate();
			response.sendRedirect("Main.jsp");
		} else if (uri.equals("UpdateService.do")) {
			String email = request.getParameter("email");
			String pw = request.getParameter("pw");
			String tel = request.getParameter("tel");
			String address = request.getParameter("address");

			System.out.println(email + pw + tel + address);

			MemberDTO dto = new MemberDTO(email, pw, tel, address);
			int cnt = new MemberDAO().update(dto);

			if (cnt > 0) {
				System.out.println("정보수정 성공!");
				session.setAttribute("loginInfo", dto);
			} else {
				System.out.println("정보수정 실패...");
			}
			response.sendRedirect("Main.jsp");

		} else if (uri.equals("IdCheckService.do")) {
			String email = request.getParameter("email");
			System.out.println(email);

			boolean check = new MemberDAO().idCheck(email);

			// true -> 중복X
			// false -> 중복O
			PrintWriter out = response.getWriter();
			out.print(check);

		} else if (uri.equals("DeleteService.do")) {
			request.setCharacterEncoding("UTF-8");
			String email = request.getParameter("email");

			System.out.println(email);
			int del = new MemberDAO().deleteMember(email);

			if (del != 0) {
				System.out.println("삭제 성공!");
			} else {
				System.out.println("삭제 실패...");
			}
			response.sendRedirect("ShowMember.jsp");

		} else if (uri.equals("BoardService.do")) {
			String path = request.getServletContext().getRealPath("./file");
			// System.out.println(path);

			// 3. 파일 최대크기
			int maxSize = 1024 * 1024 * 10; // 10MB

			// 4. 인코딩방식
			String encoding = "UTF-8";

			// 5. 중복제거
			DefaultFileRenamePolicy rename = new DefaultFileRenamePolicy();

			// 파일 선택 후 전송버튼을 누르면 MultipartRequest객체를 통해서 넘어온다
			MultipartRequest multi = new MultipartRequest(request, path, maxSize, encoding, rename);

			// 데이터 가져오기
			String title = multi.getParameter("title");
			String writer = multi.getParameter("writer");
			String filename = multi.getFilesystemName("filename");
			String content = multi.getParameter("content");

			// 잘 넘어왔는지 확인

			// -> 콘솔창에 잘 뜨는지, file폴더에 사진이 들어가 있는지, 똑같은 file업로드 시 중복제거가 되는지
			System.out.println("title : " + title);
			System.out.println("writer : " + writer);
			System.out.println("filename : " + filename);
			System.out.println("content : " + content);

			BoardVO board = new BoardVO(title, writer, filename, content);
			int cnt = new BoardDAO().boardWrite(board);

			if (cnt > 0) {
				System.out.println("글작성 성공!");
			} else {
				System.out.println("글작성 실패...");
			}
			response.sendRedirect("BoardMain.jsp");

		} else if (uri.equals("DelBoardService.do")) {
			String num = request.getParameter("num");

			System.out.println(num);
			int del = new BoardDAO().deleteBoard(num);

			if (del != 0) {
				System.out.println("삭제 성공!");
			} else {
				System.out.println("삭제 실패...");
			}
			response.sendRedirect("BoardMain.jsp");

		}

	}

}
